// This file is automatically generated with misc/generate-keymap.py script

// (enhances) Overrides of default bindings, enhancing same function 
// 
//    insert linebreak with formatting         : enter
//    toggle_comment                           : super+shift+forward_slash
// 
// (replaces) Overrides of default bindings
// 
//    decrement_number_by_1                    : ctrl+down
//    increment_number_by_1                    : ctrl+up
// 
// (replaces_infrequent) Overrides of infreqently used default bindings
// 
//    expand_abbreviation                      : ctrl+e
// 
[
    {
        "keys": [
            "shift+super+y"
        ], 
        "args": {
            "action": "evaluate_math_expression"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.evaluate_math_expression"
            }
        ]
    }, 
    {
        "keys": [
            "super+'"
        ], 
        "args": {
            "action": "remove_tag"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.remove_tag"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+up"
        ], 
        "args": {
            "action": "increment_number_by_1"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.increment_number_by_1.replaces_default"
            }
        ]
    }, 
    {
        "keys": [
            "super+shift+forward_slash"
        ], 
        "args": {
            "action": "toggle_comment"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "operand": "source.css - source.css.less, text.xml, text.html", 
                "operator": "equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "match_all": true, 
                "key": "emmet_action_enabled.toggle_comment.enhances_default"
            }
        ]
    }, 
    {
        "keys": [
            "shift+super+."
        ], 
        "args": {
            "action": "select_next_item"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.select_next_item"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+alt+enter"
        ], 
        "command": "expand_as_you_type", 
        "context": [
            {
                "operand": false, 
                "operator": "equal", 
                "match_all": true, 
                "key": "setting.is_widget"
            }, 
            {
                "match_all": true, 
                "key": "emmet_action_enabled.expand_as_you_type"
            }
        ]
    }, 
    {
        "keys": [
            "alt+down"
        ], 
        "args": {
            "action": "decrement_number_by_01"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.decrement_number_by_01"
            }
        ]
    }, 
    {
        "keys": [
            "shift+ctrl+d"
        ], 
        "args": {
            "action": "encode_decode_data_url"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.encode_decode_data_url"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+j"
        ], 
        "args": {
            "action": "match_pair_inward"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.match_pair_inward"
            }
        ]
    }, 
    {
        "keys": [
            "alt+super+up"
        ], 
        "args": {
            "action": "increment_number_by_10"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.increment_number_by_10"
            }
        ]
    }, 
    {
        "keys": [
            "shift+super+r"
        ], 
        "args": {
            "action": "reflect_css_value"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.reflect_css_value"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+alt+left"
        ], 
        "args": {
            "action": "prev_edit_point"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.prev_edit_point"
            }
        ]
    }, 
    {
        "keys": [
            "shift+super+,"
        ], 
        "args": {
            "action": "select_previous_item"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.select_previous_item"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+d"
        ], 
        "args": {
            "action": "match_pair_outward"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.match_pair_outward"
            }
        ]
    }, 
    {
        "keys": [
            "shift+ctrl+i"
        ], 
        "args": {
            "action": "update_image_size"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.update_image_size"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+alt+right"
        ], 
        "args": {
            "action": "next_edit_point"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.next_edit_point"
            }
        ]
    }, 
    {
        "keys": [
            "shift+super+'"
        ], 
        "args": {
            "action": "split_join_tag"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.split_join_tag"
            }
        ]
    }, 
    {
        "keys": [
            "alt+super+down"
        ], 
        "args": {
            "action": "decrement_number_by_10"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.decrement_number_by_10"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+w"
        ], 
        "command": "wrap_as_you_type", 
        "context": [
            {
                "operand": false, 
                "operator": "equal", 
                "match_all": true, 
                "key": "setting.is_widget"
            }, 
            {
                "match_all": true, 
                "key": "emmet_action_enabled.wrap_as_you_type"
            }
        ]
    }, 
    {
        "keys": [
            "super+shift+k"
        ], 
        "command": "rename_tag", 
        "context": [
            {
                "key": "emmet_action_enabled.rename_tag"
            }
        ]
    }, 
    {
        "keys": [
            "alt+up"
        ], 
        "args": {
            "action": "increment_number_by_01"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.increment_number_by_01"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+shift+t"
        ], 
        "args": {
            "action": "matching_pair"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.matching_pair"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+down"
        ], 
        "args": {
            "action": "decrement_number_by_1"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.decrement_number_by_1.replaces_default"
            }
        ]
    }, 
    {
        "keys": [
            "ctrl+e"
        ], 
        "args": {
            "action": "expand_abbreviation"
        }, 
        "command": "run_emmet_action", 
        "context": [
            {
                "key": "emmet_action_enabled.expand_abbreviation.replaces_infrequent_default"
            }
        ]
    }, 
    {
        "keys": [
            "tab"
        ], 
        "command": "expand_abbreviation_by_tab", 
        "context": [
            {
                "operand": "source.css, source.sass, source.less, source.scss, source.stylus, text.xml, text.html, text.haml, text.scala.html, source string", 
                "operator": "equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "operand": "text.html source.php, storage.type.templatetag.django", 
                "operator": "not_equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "match_all": true, 
                "key": "selection_empty"
            }, 
            {
                "operator": "equal", 
                "operand": false, 
                "match_all": true, 
                "key": "has_next_field"
            }, 
            {
                "operator": "equal", 
                "operand": false, 
                "match_all": true, 
                "key": "setting.disable_tab_abbreviations"
            }, 
            {
                "operand": false, 
                "operator": "equal", 
                "match_all": true, 
                "key": "auto_complete_visible"
            }, 
            {
                "match_all": true, 
                "key": "is_abbreviation"
            }
        ]
    }, 
    {
        "keys": [
            "tab"
        ], 
        "command": "expand_abbreviation_by_tab", 
        "context": [
            {
                "operand": "source.css, source.sass, source.less, source.scss, source.stylus, text.xml, text.html, text.haml, text.scala.html, source string", 
                "operator": "equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "operand": "text.html source.php, storage.type.templatetag.django", 
                "operator": "not_equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "match_all": true, 
                "key": "selection_empty"
            }, 
            {
                "operator": "equal", 
                "operand": false, 
                "match_all": true, 
                "key": "has_next_field"
            }, 
            {
                "operator": "equal", 
                "operand": true, 
                "match_all": true, 
                "key": "auto_complete_visible"
            }, 
            {
                "operator": "equal", 
                "operand": false, 
                "match_all": true, 
                "key": "setting.disable_tab_abbreviations_on_auto_complete"
            }, 
            {
                "match_all": true, 
                "key": "is_abbreviation"
            }
        ]
    }, 
    {
        "keys": [
            "enter"
        ], 
        "args": {
            "contents": "\n\t${0}\n"
        }, 
        "command": "insert_snippet", 
        "__doc__": "insert linebreak with formatting", 
        "context": [
            {
                "operand": "meta.scope.between-tag-pair.html, meta.scope.between-tag-pair.xml", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "operand": false, 
                "match_all": true, 
                "key": "auto_complete_visible"
            }, 
            {
                "match_all": true, 
                "key": "clear_fields_on_enter_key"
            }, 
            {
                "operand": false, 
                "match_all": true, 
                "key": "setting.disable_formatted_linebreak"
            }
        ]
    }, 
    {
        "keys": [
            "#"
        ], 
        "args": {
            "attribute": "id"
        }, 
        "command": "emmet_insert_attribute", 
        "context": [
            {
                "operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -source -meta.tag.template.value.twig", 
                "operator": "equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "operator": "equal", 
                "operand": true, 
                "key": "setting.auto_id_class"
            }
        ]
    }, 
    {
        "keys": [
            "."
        ], 
        "args": {
            "attribute": "class"
        }, 
        "command": "emmet_insert_attribute", 
        "context": [
            {
                "operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -source -meta.tag.template.value.twig", 
                "operator": "equal", 
                "match_all": true, 
                "key": "selector"
            }, 
            {
                "operator": "equal", 
                "operand": true, 
                "key": "setting.auto_id_class"
            }
        ]
    }
]